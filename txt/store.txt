
CREATE PROCEDURE public."ActualizarResena"(IN p_id integer, IN p_comentario text, IN p_tipo_resena text, OUT resultado integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
    IF p_tipo_resena = 'proveedor' THEN
        UPDATE public."Historial"
        SET "resenaProveedor" = p_comentario
        WHERE "id" = p_id;
    ELSIF p_tipo_resena = 'contratador' THEN
        UPDATE public."Historial"
        SET "resenaContratador" = p_comentario
        WHERE "id" = p_id;
    ELSE
        resultado := -1; 
    END IF;
    IF NOT FOUND THEN
        resultado := -2; 
    ELSE
        resultado := 1;
    END IF;
END;
$$;


ALTER PROCEDURE public."ActualizarResena"(IN p_id integer, IN p_comentario text, IN p_tipo_resena text, OUT resultado integer) OWNER TO postgres;

--
-- TOC entry 238 (class 1255 OID 16523)
-- Name: likear(integer, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.likear(IN idusuario integer, IN idofrecido integer, OUT resultado integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
    IF EXISTS (
        SELECT 1 
        FROM public."Favoritos" 
        WHERE "idUsuario" = idUsuario AND "idOfrecido" = idOfrecido
    ) THEN
        DELETE FROM public."Favoritos" 
        WHERE "idUsuario" = idUsuario AND "idOfrecido" = idOfrecido;
        
        resultado := -1; -- Indicar que se eliminó el registro existente

    ELSE
        INSERT INTO public."Favoritos"("idUsuario", "idOfrecido")
        VALUES (idUsuario, idOfrecido);

        resultado := 1; -- Indicar que se insertó un nuevo registro
    END IF;
END;
$$;


ALTER PROCEDURE public.likear(IN idusuario integer, IN idofrecido integer, OUT resultado integer) OWNER TO postgres;

--
-- TOC entry 250 (class 1255 OID 16524)
-- Name: registrarse(character varying, character varying, character varying, character varying, character varying, integer, character varying, date); Type: PROCEDURE; Schema: public; Owner: postgres
--

CREATE PROCEDURE public.registrarse(IN p_email character varying, IN p_nombre character varying, IN p_apellido character varying, IN p_direccion character varying, IN p_contrasena character varying, IN p_idgenero integer, IN p_foto character varying, IN p_fechanacimiento date, OUT p_resultado integer)
    LANGUAGE plpgsql
    AS $$
BEGIN
    IF EXISTS (
        SELECT 1 
        FROM public."Usuarios" 
        WHERE "email" = p_email
    ) THEN
        p_resultado := -1; -- Indicar que ya existe
    ELSE
        INSERT INTO public."Usuarios"(
            email, 
            nombre, 
            apellido, 
            direccion, 
            contrasena, 
            "idGenero", 
            foto, 
            "FechaNacimiento"
        ) VALUES (
            p_email,
            p_nombre,
            p_apellido,
            p_direccion,
            p_contrasena,
            p_idGenero,
            p_foto,
            p_fechaNacimiento
        );

        p_resultado := 1; -- Indicar que se insertó un nuevo registro
    END IF;
END;
$$;


ALTER PROCEDURE public.registrarse(IN p_email character varying, IN p_nombre character varying, IN p_apellido character varying, IN p_direccion character varying, IN p_contrasena character varying, IN p_idgenero integer, IN p_foto character varying, IN p_fechanacimiento date, OUT p_resultado integer) OWNER TO postgres;

--
-- TOC entry 252 (class 1255 OID 16528)
-- Name: reserva(integer, integer, integer, date, integer); Type: PROCEDURE; Schema: public; Owner: postgres
--

-- PROCEDURE: public.reserva(integer, integer, integer, date, integer)

-- DROP PROCEDURE IF EXISTS public.reserva(integer, integer, integer, date, integer);

CREATE OR REPLACE PROCEDURE public.reserva(
	IN idpublicacion integer,
	IN idoffer integer,
	IN idcontratador integer,
	IN fechareservada date,
	IN idestado integer,
	OUT resultado integer)
LANGUAGE 'plpgsql'
AS $BODY$
DECLARE
    existing_reservation integer;
BEGIN
    SELECT id INTO existing_reservation
    FROM "Historial"  
    WHERE "Historial"."idProveedor" = idoffer  
    AND "Historial"."idPublicacion" = idpublicacion  
      AND "Historial"."idContratador" = idcontratador
      AND "Historial"."fechaReservada" = fechareservada;

    IF existing_reservation IS NOT NULL THEN
        UPDATE "Historial"  
        SET idEstado = idestado
        WHERE id = existing_reservation;
        resultado := 1;
    ELSE
        INSERT INTO "Historial" ("idPublicacion", "idContratador", "fechaReservada", "idEstado", "idProveedor")
        VALUES (idpublicacion, idcontratador, fechareservada, idestado, idoffer);
        resultado := 2;
    END IF;
END;
$BODY$;
ALTER PROCEDURE public.reserva(integer, integer, integer, date, integer)
    OWNER TO postgres;
